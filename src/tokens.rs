pub(crate) const AGGREGATE_FUNCTION_FLAG: char = '%';
pub(crate) const ALIAS_DELIMITER: char = ':';
pub(crate) const AND_CONDITION_L_BRACE: char = '{';
pub(crate) const AND_CONDITION_R_BRACE: char = '}';
pub(crate) const COLUMN_CONTROL_BRACE_L: char = '[';
pub(crate) const COLUMN_CONTROL_BRACE_R: char = ']';
pub(crate) const COLUMN_CONTROL_FLAG_GROUP: char = 'g';
pub(crate) const COLUMN_CONTROL_FLAG_HIDE: char = 'h';
pub(crate) const COLUMN_CONTROL_FLAG_PARTITION: char = 'p';
pub(crate) const COLUMN_CONTROL_FLAG_SORT: char = 's';
pub(crate) const COLUMN_SPEC_PREFIX: char = '-';
pub(crate) const COMPOSITION_ARGUMENT_BRACE_L: char = '(';
pub(crate) const COMPOSITION_ARGUMENT_BRACE_R: char = ')';
pub(crate) const COMPOSITION_PREFIX: char = '|';
pub(crate) const DB_IDENTIFIER_QUOTE: char = '`';
pub(crate) const ESCAPE_PREFIX: char = '\\';
pub(crate) const LINK_TO_MANY_COLUMN_L_BRACE: char = '(';
pub(crate) const LINK_TO_MANY_COLUMN_R_BRACE: char = ')';
pub(crate) const LINK_TO_MANY_PREFIX: char = '*';
pub(crate) const LINK_TO_ONE_PREFIX: char = '.';
pub(crate) const LITERAL_FALSE: &str = "@false";
pub(crate) const LITERAL_INFINITY: &str = "@inf";
pub(crate) const LITERAL_NOW: &str = "@now";
pub(crate) const LITERAL_NULL: &str = "@null";
pub(crate) const LITERAL_TRUE: &str = "@true";
pub(crate) const OPERATOR_EQ: &str = "=";
pub(crate) const OPERATOR_GT: &str = ">";
pub(crate) const OPERATOR_GTE: &str = ">=";
pub(crate) const OPERATOR_LIKE: &str = "~~";
pub(crate) const OPERATOR_LT: &str = "<";
pub(crate) const OPERATOR_LTE: &str = "<=";
pub(crate) const OPERATOR_NEQ: &str = "!=";
pub(crate) const OPERATOR_NOT_LIKE: &str = "!~~";
pub(crate) const OPERATOR_NOT_R_LIKE: &str = "!~";
pub(crate) const OPERATOR_R_LIKE: &str = "~";
pub(crate) const OR_CONDITION_L_BRACE: char = '[';
pub(crate) const OR_CONDITION_R_BRACE: char = ']';
pub(crate) const SORT_FLAG_DESC: char = 'd';
pub(crate) const SORT_FLAG_NULLS_FIRST: char = 'n';
pub(crate) const SORT_FLAGS_BRACE_L: char = '(';
pub(crate) const SORT_FLAGS_BRACE_R: char = ')';
pub(crate) const STRING_QUOTE_DOUBLE: char = '"';
pub(crate) const STRING_QUOTE_SINGLE: char = '\'';
pub(crate) const TRANSFORMATION_DELIMITER: &str = "~~~";
